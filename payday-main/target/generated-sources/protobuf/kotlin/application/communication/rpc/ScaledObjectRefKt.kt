//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: external_scaler.proto

package application.communication.rpc;

@kotlin.jvm.JvmSynthetic
inline fun scaledObjectRef(block: application.communication.rpc.ScaledObjectRefKt.Dsl.() -> kotlin.Unit): application.communication.rpc.ExternalScalerOuterClass.ScaledObjectRef =
  application.communication.rpc.ScaledObjectRefKt.Dsl._create(application.communication.rpc.ExternalScalerOuterClass.ScaledObjectRef.newBuilder()).apply { block() }._build()
object ScaledObjectRefKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: application.communication.rpc.ExternalScalerOuterClass.ScaledObjectRef.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: application.communication.rpc.ExternalScalerOuterClass.ScaledObjectRef.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): application.communication.rpc.ExternalScalerOuterClass.ScaledObjectRef = _builder.build()

    /**
     * <code>string name = 1;</code>
     */
    var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 1;</code>
     */
    fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>string namespace = 2;</code>
     */
    var namespace: kotlin.String
      @JvmName("getNamespace")
      get() = _builder.getNamespace()
      @JvmName("setNamespace")
      set(value) {
        _builder.setNamespace(value)
      }
    /**
     * <code>string namespace = 2;</code>
     */
    fun clearNamespace() {
      _builder.clearNamespace()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class ScalerMetadataProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>map&lt;string, string&gt; scalerMetadata = 3;</code>
     */
     val scalerMetadata: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ScalerMetadataProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getScalerMetadataMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getScalerMetadataMap()
      )
    /**
     * <code>map&lt;string, string&gt; scalerMetadata = 3;</code>
     */
    @JvmName("putScalerMetadata")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ScalerMetadataProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putScalerMetadata(key, value)
       }
    /**
     * <code>map&lt;string, string&gt; scalerMetadata = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setScalerMetadata")
    inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ScalerMetadataProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * <code>map&lt;string, string&gt; scalerMetadata = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeScalerMetadata")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ScalerMetadataProxy>
      .remove(key: kotlin.String) {
         _builder.removeScalerMetadata(key)
       }
    /**
     * <code>map&lt;string, string&gt; scalerMetadata = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllScalerMetadata")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ScalerMetadataProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllScalerMetadata(map)
       }
    /**
     * <code>map&lt;string, string&gt; scalerMetadata = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearScalerMetadata")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ScalerMetadataProxy>
      .clear() {
         _builder.clearScalerMetadata()
       }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun application.communication.rpc.ExternalScalerOuterClass.ScaledObjectRef.copy(block: application.communication.rpc.ScaledObjectRefKt.Dsl.() -> kotlin.Unit): application.communication.rpc.ExternalScalerOuterClass.ScaledObjectRef =
  application.communication.rpc.ScaledObjectRefKt.Dsl._create(this.toBuilder()).apply { block() }._build()
